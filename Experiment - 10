#include <stdio.h>
#include <string.h>
#include <ctype.h>
char input[100];
int pos = 0;
int E();
int Eprime();
int T();
int Tprime();
int F();
int isIdentifier() {
    if (isalpha(input[pos])) {
        pos++;
        while (isalnum(input[pos])) 
            pos++;
        return 1;
    }
    return 0;
}
int F() {
    if (input[pos] == '(') {
        pos++;
        if (E()) {
            if (input[pos] == ')') {
                pos++;
                return 1;
            } else return 0;
        } else return 0;
    } 
    else if (isIdentifier()) {
        return 1;
    }
    return 0;
}
int Tprime() {
    if (input[pos] == '*') {
        pos++;
        if (F() && Tprime())
            return 1;
        else
            return 0;
    }
    return 1; 
}
int T() {
    if (F() && Tprime())
        return 1;
    else
        return 0;
}
int Eprime() {
    if (input[pos] == '+') {
        pos++;
        if (T() && Eprime())
            return 1;
        else
            return 0;
    }
    return 1; 
}
int E() {
    if (T() && Eprime())
        return 1;
    else
        return 0;
}
int main() {
    printf("Grammar:\nE → T E'\nE' → +T E' | ε\nT → F T'\nT' → *F T' | ε\nF → (E) | id\n");
    printf("Enter the input string: ");
    scanf("%s", input);
    if (E() && pos == strlen(input))
        printf("String is VALID as per grammar.\n");
    else
        printf("String is INVALID as per grammar.\n");
    return 0;
}



OUTPUT :-
Grammar:
E → T E'
E' → +T E' | ε
T → F T'
T' → *F T' | ε
F → (E) | id
Enter the input string: id+id*id
String is VALID as per grammar.
