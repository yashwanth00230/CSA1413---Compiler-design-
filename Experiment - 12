#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <ctype.h>
int tempCount = 0;
char *newTemp() {
    char *temp = (char *)malloc(5 * sizeof(char));
    sprintf(temp, "t%d", ++tempCount);
    return temp;
}
char* generateTAC(char* expr, int start, int end);
int findMainOperator(char* expr, int start, int end) {
    int minPrecedence = 100, pos = -1, parentheses = 0;
    for (int i = start; i <= end; i++) {
        if (expr[i] == '(') parentheses++;
        else if (expr[i] == ')') parentheses--;
        else if (parentheses == 0) {
            int prec = -1;
            if (expr[i] == '+' || expr[i] == '-') prec = 1;
            else if (expr[i] == '*' || expr[i] == '/') prec = 2;
            if (prec != -1 && prec <= minPrecedence) {
                minPrecedence = prec;
                pos = i;
            }
        }
    }
    return pos;
}
char* generateTAC(char* expr, int start, int end) {
    while (start <= end && expr[start] == ' ') start++;
    while (end >= start && expr[end] == ' ') end--;
    if (expr[start] == '(' && expr[end] == ')') {
        int count = 0;
        int matched = 1;
        for (int i = start; i <= end; i++) {
            if (expr[i] == '(') count++;
            else if (expr[i] == ')') count--;
            if (count == 0 && i < end) matched = 0;
        }
        if (matched) {
            return generateTAC(expr, start + 1, end - 1);
        }
    }
    int opPos = findMainOperator(expr, start, end);
    if (opPos == -1) {
        int length = end - start + 1;
        char* operand = (char*)malloc(length + 1);
        strncpy(operand, expr + start, length);
        operand[length] = '\0';
        return operand;
    }
    char *left = generateTAC(expr, start, opPos - 1);
    char *right = generateTAC(expr, opPos + 1, end);
    char *temp = newTemp();
    printf("%s = %s %c %s\n", temp, left, expr[opPos], right);
    if (left[0] == 't') free(left);
    if (right[0] == 't') free(right);
    return temp;
}
int main() {
    char expr[100];
    printf("Enter an expression (e.g. a+b*c): ");
    fgets(expr, sizeof(expr), stdin);
    size_t len = strlen(expr);
    if (len > 0 && expr[len-1] == '\n') expr[len-1] = '\0';
    char *result = generateTAC(expr, 0, strlen(expr) - 1);
    printf("Result stored in %s\n", result);
    if (result[0] == 't') free(result);
    return 0;
}



OUTPUT:-
Enter an expression (e.g. a+b*c): a+b*c
t1 = b * c
t2 = a + t1
Result stored in t2
